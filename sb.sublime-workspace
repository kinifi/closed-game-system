{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"scene",
				"sceneName\tstring"
			],
			[
				"nam",
				"productName\tstring { get; }"
			],
			[
				"m",
				"m_debuggerOn\tbool"
			],
			[
				"start",
				"StartCoroutine(IEnumerator routine)\tCoroutine"
			],
			[
				"End",
				"EndVertical()\tvoid"
			],
			[
				"stack",
				"stackTrace\tstring"
			],
			[
				"Debu",
				"DebuggerLog\tDebuggerLog"
			],
			[
				"Log",
				"LogType\tLogType"
			],
			[
				"m_",
				"m_logType\tLogType"
			],
			[
				"GUILa",
				"GUILayout\tGUILayout"
			],
			[
				"GUIL",
				"GUILayout\tGUILayout"
			],
			[
				"GUIla",
				"GUILayout\tGUILayout"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/JSON/JSONSaving.cs",
			"settings":
			{
				"buffer_size": 1768,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.IO;\nusing TinyJSON;\n#if UNITY_EDITOR\nusing UnityEditor;\n#endif\nusing NUnit.Framework;\n\npublic class JSONLevelSaving {\n\n\n\t//list of all the prefabs in the scene\n    public List<Entity> m_Entities = new List<Entity>();\n\n\t[Test]\n\tpublic void SaveScene() {\n\t\t\n\t\tSaveScene(\"JSONUnitTest\");\n\n\t}\n\n\t//grab every GameObject in the scene and save it to an Entity then serialize it to json file\n\tpublic void SaveScene(string sceneName = \"testScene\")\n\t{\n\t\t//find all the GameObjects in the scene\n\t\tforeach (GameObject obj in Object.FindObjectsOfType(typeof(GameObject)))\n\t\t{\n            //create a new object\n            Entity newEntity = new Entity();\n            //set the name. \n            newEntity.m_name = obj.name.ToLower();\n            //set the position\n            newEntity.m_position.x = obj.transform.position.x;\n            newEntity.m_position.y = obj.transform.position.y;\n            newEntity.m_position.z = obj.transform.position.z;\n            //this object will not be static\n            newEntity.m_static = false;\n            //add the new Entity to the list of Entities \n            m_Entities.Add(newEntity);\n\t\t}\n\n\t\t\n        //serialize all these objects into a pretty json string. Ture = pretty\n        string sceneJSON = JSON.Dump(m_Entities, true);\n\n        //create a save location thats inside of the Assets folder\n        string saveLocation = Application.dataPath + \"/\" + sceneName + \".json\";\n\n        //save this into a file\n        File.WriteAllText(saveLocation, sceneJSON);\n\n\t}\n\n\n\tprivate void RefreshDatabase()\n\t{\n\t\t#if UNITY_EDITOR\n        //refresh the project view if we are in the editor only\n        AssetDatabase.Refresh();\n\t\t#endif\n\t}\n\n}\n",
			"file": "Assets/Editor/JSONLevelSaving.cs",
			"file_size": 1768,
			"file_write_time": 131194851064581990,
			"settings":
			{
				"buffer_size": 1764,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Scripts/JSON/TestScript.cs",
			"settings":
			{
				"buffer_size": 1529,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/JSON/Entity.cs",
			"settings":
			{
				"buffer_size": 188,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 276.0,
		"last_filter": "box",
		"selected_items":
		[
			[
				"box",
				"Boxy Theme: Presets"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"boxy",
				"Boxy Theme: Presets"
			]
		],
		"width": 446.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/chrisf/Documents/GitHub/closed-game-system",
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/Assets"
	],
	"file_history":
	[
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/sb.sublime-project",
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/Assets/Scripts/DebugSystem/Debugger.cs",
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/Assets/Scripts/DebugSystem/DebuggerTreeView.cs",
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/Assets/Scripts/DebugSystem/Log.cs",
		"/C/Users/chrisf/Documents/GitHub/closed-game-system/Assets/Scripts/DebugSystem/LogTest.cs",
		"/C/Users/Chris/wkspaces/closedgamesystem/Assets/Scripts/Log.cs",
		"/C/Users/Chris/wkspaces/closedgamesystem/Assets/Scripts/Debugger.cs",
		"/C/Users/Chris/wkspaces/closedgamesystem/sb.sublime-project",
		"/C/Users/Chris/wkspaces/snowhorse_local/Assets/Scripts/Steam/SubmitToLeaderboard.cs",
		"/C/Users/Chris/wkspaces/snowhorse_local/Assets/Scripts/LanguageSwitcher.cs",
		"/C/Users/Chris/AppData/Roaming/Sublime Text 3/Packages/User/Plain text.sublime-settings",
		"/C/Users/Chris/wkspaces/snowhorse_local/sb.sublime-project",
		"/C/Users/Chris/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Chris/wkspaces/snowhorse_local/SteamBuildUploader/ContentBuilder/scripts/linux_build_270033.vdf",
		"/C/Users/Chris/wkspaces/snowhorse_local/SteamBuildUploader/ContentBuilder/scripts/windows_build_270031.vdf",
		"/C/Users/Chris/wkspaces/snowhorse_local/SteamBuildUploader/ContentBuilder/scripts/mac_build_270032.vdf",
		"/C/Users/Chris/wkspaces/snowhorse_local/ignore.conf",
		"/C/Users/Chris/wkspaces/snowhorse_local/SteamBuildUploader/ContentBuilder/scripts/app_build_270030.vdf",
		"/C/Users/Chris/Documents/electron-quick-start/main.js",
		"/C/Users/Chris/Documents/FlixelGames/newproject/source/Main.hx",
		"/C/Users/Chris/Documents/FlixelGames/newproject/source/MenuState.hx",
		"/C/Users/Chris/Documents/playerJSON/Assets/snow.horse",
		"/C/Users/Chris/Documents/FlixelGames/newproject/Project.xml",
		"/C/Users/Chris/Documents/FlixelGames/newproject/source/PlayState.hx",
		"/C/Users/Chris/Documents/FlixelGames/newproject/source/AssetPaths.hx",
		"/C/Users/Chris/Documents/FlixelGames/newproject/newproject.sublime-project"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/JSON/JSONSaving.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1768,
						"regions":
						{
						},
						"selection":
						[
							[
								295,
								199
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"263,273": "after '_' a lower letter should follow. (Rule 'Fields')",
								"510,519": "Parameter can be IComparable",
								"591,601": "Collection element type 'Object' is not implicitly convertible to 'GameObject'",
								"705,711": "Use 'var' keyword"
							},
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Editor/JSONLevelSaving.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								1761,
								1761
							]
						],
						"settings":
						{
							"oops":
							{
								"161,166": "'NUnit' is not a known identifier",
								"167,176": "'?' does not contain a definition for 'Framework'",
								"312,316": "Error: ?"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "Assets/Scripts/JSON/TestScript.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1529,
						"regions":
						{
						},
						"selection":
						[
							[
								1528,
								1528
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"oops":
							{
								"19,24": "Using directive is not used by code and can be removed safely.",
								"274,284": "after '_' a lower letter should follow. (Rule 'Fields')",
								"591,597": "Use 'var' keyword"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Scripts/JSON/Entity.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"122,132": "Name should have prefix '_'. (Rule 'Fields').",
								"152,158": "Name should have prefix '_'. (Rule 'Fields').",
								"176,184": "Name should have prefix '_'. (Rule 'Fields').",
								"26,31": "Using directive is not used by code and can be removed safely."
							},
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "sb.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"jsonlevel",
				"Assets\\Editor\\JSONLevelSaving.cs"
			],
			[
				"jsonte",
				"Assets\\Scripts\\JSON\\TestScript.cs"
			],
			[
				"jsonsav",
				"Assets\\Scripts\\JSON\\JSONSaving.cs"
			],
			[
				"languageswi",
				"Assets\\Scripts\\LanguageSwitcher.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 254.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
